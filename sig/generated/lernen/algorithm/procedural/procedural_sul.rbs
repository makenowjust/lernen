# Generated from lib/lernen/algorithm/procedural/procedural_sul.rb with RBS::Inline

module Lernen
  module Algorithm
    module Procedural
      # ProceduralSUL is a wrapper of SUL for procedural learning.
      #
      # @rbs generic In     -- Type for input alphabet
      # @rbs generic Call   -- Type for call alphabet
      # @rbs generic Return -- Type for return alphabet
      class ProceduralSUL[In, Call, Return] < System::MooreLikeSUL[In | Call, bool]
        @proc: Call

        @sul: System::SUL[In | Call | Return, bool]

        @manager: ATRManager[In, Call, Return]

        # : (
        #     Call proc,
        #     System::SUL[In | Call | Return, bool] sul,
        #     ATRManager[In, Call, Return] manager
        #   ) -> void
        def initialize: (Call proc, System::SUL[In | Call | Return, bool] sul, ATRManager[In, Call, Return] manager) -> void

        # @rbs override
        def query_empty: ...

        # @rbs override
        def query: ...

        # @rbs override
        def step: ...
      end
    end
  end
end
