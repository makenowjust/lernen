# Generated from lib/lernen/algorithm/lstar_vpa/lstar_vpa_learner.rb with RBS::Inline

module Lernen
  module Algorithm
    module LStarVPA
      # LStarLearner is an implementation of Angluin's L* algorithm extended for VPA.
      #
      # @rbs generic In     -- Type for input alphabet
      # @rbs generic Call   -- Type for call alphabet
      # @rbs generic Return -- Type for return alphabet
      class LStarVPALearner[In, Call, Return] < Learner[In | Call | Return, bool]
        @table: ObservationTableVPA[In, Call, Return]

        # : (
        #     Array[In] alphabet, Array[Call] call_alphabet, Array[Return] return_alphabet,
        #     System::SUL[In | Call | Return, bool] sul,
        #     ?cex_processing: cex_processing_method
        #   ) -> void
        def initialize: (Array[In] alphabet, Array[Call] call_alphabet, Array[Return] return_alphabet, System::SUL[In | Call | Return, bool] sul, ?cex_processing: cex_processing_method) -> void

        # @rbs override
        def build_hypothesis: ...

        # @rbs override
        def refine_hypothesis: ...
      end
    end
  end
end
