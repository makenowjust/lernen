# Generated from lib/lernen/algorithm/lstar/lstar_learner.rb with RBS::Inline

module Lernen
  module Algorithm
    module LStar
      # LStarLearner is an implementation of Angluin's L* algorithm.
      #
      # Angluin's L* is introduced by [Angluin (1987) "Learning Regular Sets from
      # Queries and Counterexamples"](https://dl.acm.org/doi/10.1016/0890-5401%2887%2990052-6).
      #
      # @rbs generic In  -- Type for input alphabet
      # @rbs generic Out -- Type for output values
      class LStarLearner[In, Out] < Learner[In, Out]
        @alphabet: Array[In]

        @oracle: Equiv::Oracle[In, Out]

        @table: ObservationTable[In, Out]

        # : (
        #     Array[In] alphabet, System::SUL[In, Out] sul,
        #     automaton_type: :dfa | :moore | :mealy,
        #     ?cex_processing: cex_processing_method | nil
        #   ) -> void
        def initialize: (Array[In] alphabet, System::SUL[In, Out] sul, automaton_type: :dfa | :moore | :mealy, ?cex_processing: cex_processing_method | nil) -> void

        # @rbs override
        def build_hypothesis: ...

        # @rbs override
        def refine_hypothesis: ...

        # @rbs override
        def add_alphabet: ...
      end
    end
  end
end
