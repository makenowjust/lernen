# Generated from lib/lernen/graph.rb with RBS::Inline

module Lernen
  # Graph represents a labelled directed graph.
  #
  # This is an intermediate data structure for rendering Mermaid and Graphviz diagrams.
  class Graph
    type node_shape = :circle | :doublecircle | :none

    type mermaid_direction = "TD" | "DT" | "LR" | "RL"

    class Node < Data
      attr_reader label: String
      attr_reader shape: node_shape
      def self.[]: (String label, node_shape shape) -> Node
    end

    class Edge < Data
      attr_reader from: Integer | String
      attr_reader label: String | nil
      attr_reader to: Integer | String
      def self.[]: (Integer | String from, String | nil label, Integer | String to) -> Edge
    end

    class SubGraph < Data
      attr_reader label: String
      attr_reader graph: Graph
      def self.[]: (String label, Graph graph) -> SubGraph
    end

    # Returns the escaped string for Mermaid diagrams.
    #
    # See https://mermaid.js.org/syntax/flowchart.html#entity-codes-to-escape-characters.
    #
    # : (String label) -> String
    def self.mermaid_escape: (String label) -> String

    # Returns the escaped string for GraphViz DOTs.
    #
    # See https://graphviz.org/docs/attr-types/escString/.
    #
    # : (String label) -> String
    def self.dot_escape: (String label) -> String

    @subgraphs: Array[SubGraph]

    @edges: Array[Edge]

    @nodes: Hash[Integer | String, Node]

    # : (
    #     Hash[Integer | String, Node] nodes,
    #     Array[Edge] edges,
    #     ?Array[SubGraph] subgraphs
    #   ) -> void
    def initialize: (Hash[Integer | String, Node] nodes, Array[Edge] edges, ?Array[SubGraph] subgraphs) -> void

    attr_reader nodes: Hash[Integer | String, Node]

    attr_reader edges: Array[Edge]

    attr_reader subgraphs: Array[SubGraph]

    # Returns a [Mermaid](https://mermaid.js.org) diagram of this graph.
    #
    # : (?direction: mermaid_direction) -> String
    def to_mermaid: (?direction: mermaid_direction) -> String

    # Returns a [GraphViz](https://graphviz.org) DOT diagram of this graph.
    #
    # : () -> String
    def to_dot: () -> String

    # : (?String id_prefix) -> String
    def to_mermaid_internal: (?String id_prefix) -> String

    # : (?String id_prefix) -> String
    def to_dot_internal: (?String id_prefix) -> String
  end
end
